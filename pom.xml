<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>br.org.biblivre</groupId>
	<artifactId>afroteca</artifactId>
	<packaging>war</packaging>

	<name>Afroteca</name>
	<version>1.0.0-alpha</version>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.5.RELEASE</version>
	</parent>
	<developers>
	</developers>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jdk.version>1.8</jdk.version>
		<debug>false</debug>
		<dockerfile.version>1.4.1</dockerfile.version>
		<docker.image.prefix>cleydyr</docker.image.prefix>
		<aws.java.sdk.version>2.13.44</aws.java.sdk.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>software.amazon.awssdk</groupId>
				<artifactId>bom</artifactId>
				<version>${aws.java.sdk.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<repositories>
		<repository>
			<id>clojars.org</id>
			<url>http://clojars.org/repo</url>
		</repository>
		<repository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2/</url>
		</repository>
		<repository>
			<id>legacy-libs</id>
			<url>file://${project.basedir}/lib</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.apache.tomcat.embed</groupId>
					<artifactId>tomcat-embed-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-core</artifactId>
			<version>9.0.35</version><!--$NO-MVN-MAN-VER$ -->
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>1.14.3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>1.14.3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<version>1.14.3</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20180813</version>
		</dependency>

		<dependency>
			<groupId>com.github.stefanbirkner</groupId>
			<artifactId>system-lambda</artifactId>
			<version>1.0.0</version>
		</dependency>

		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>apache-client</artifactId>
		</dependency>

		<dependency>
			<groupId>software.amazon.awssdk</groupId>
			<artifactId>s3</artifactId>
			<exclusions>
				<exclusion>
					<groupId>software.amazon.awssdk</groupId>
					<artifactId>netty-nio-client</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.2</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>1.6</version>
		</dependency>

		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>

		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>[1.3.3,)</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>[1.18,)</version>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>

		<dependency>
			<groupId>org.marc4j</groupId>
			<artifactId>marc4j</artifactId>
			<version>2.8.3</version>
		</dependency>

		<dependency>
			<groupId>org.jzkit</groupId>
			<artifactId>jzkit2_z3950_plugin</artifactId>
			<version>2.2.3</version>
			<exclusions>
				<exclusion>
					<artifactId>marc4j</artifactId>
					<groupId>marc4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>xalan</artifactId>
					<groupId>xalan</groupId>
				</exclusion>
				<exclusion>
					<artifactId>maven-antrun-plugin</artifactId>
					<groupId>org.apache.maven.plugins</groupId>
				</exclusion>
				<exclusion>
					<artifactId>ant</artifactId>
					<groupId>ant</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.jzkit</groupId>
			<artifactId>jzkit2_core</artifactId>
			<version>2.2.3</version>
		</dependency>

		<dependency>
			<groupId>com.googlecode.juniversalchardet</groupId>
			<artifactId>juniversalchardet</artifactId>
			<version>1.0.3</version>
		</dependency>

		<dependency>
			<groupId>net.objectlab.kit</groupId>
			<artifactId>datecalc-common</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>net.objectlab.kit</groupId>
			<artifactId>datecalc-joda</artifactId>
			<version>1.2.0</version>
		</dependency>

		<dependency>
			<groupId>com.lowagie.legacy</groupId>
			<artifactId>itext</artifactId>
			<version>4.2.1</version>
		</dependency>

		<dependency>
			<groupId>javax.measure</groupId>
			<artifactId>unit-api</artifactId>
			<version>2.0-EDR</version>
		</dependency>

		<dependency>
			<groupId>tech.units</groupId>
			<artifactId>indriya</artifactId>
			<version>2.0-EDR</version>
		</dependency>

		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-digester</groupId>
			<artifactId>commons-digester</artifactId>
			<version>2.1</version>
		</dependency>

		<dependency>
			<groupId>org.jzkit</groupId>
			<artifactId>a2j</artifactId>
			<version>2.0.4</version>
		</dependency>

		<dependency>
			<groupId>org.jzkit</groupId>
			<artifactId>jzkit2_service</artifactId>
			<version>2.2.3</version>
		</dependency>

		<dependency>
			<groupId>org.apache.jdbm</groupId>
			<artifactId>jdbm</artifactId>
			<version>1.0</version>
		</dependency>

		<dependency>
			<groupId>org.jzkit</groupId>
			<artifactId>jzkit2_jdbc_plugin</artifactId>
			<version>2.2.3</version>
		</dependency>

		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
		</dependency>
		<!-- / -->

	</dependencies>

	<build>
		<finalName>Afroteca</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<debug>${debug}</debug>
					<optimize>!${debug}</optimize>
					<verbose>false</verbose>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webResources>
						<resource>
							<directory>WebContent</directory>
							<filtering>false</filtering>
							<excludes>
								<exclude>**/*.scss</exclude>
								<exclude>**/about_biblivre.jsp</exclude>
								<exclude>Tarefas.txt</exclude>
																<exclude>Traducoes - enUS.txt</exclude>

								<exclude>Traducoes - ptBR.txt</exclude>
																<exclude>Traducoes - es.txt</exclude>

							</excludes>
						</resource>
						<resource>
							<directory>WebContent</directory>
							<filtering>true</filtering>
							<includes>
								<include>**/about_biblivre.jsp</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.gitlab.haynes</groupId>
				<artifactId>libsass-maven-plugin</artifactId>
				<version>0.2.24</version>
				<executions>
					<execution>
						<phase>generate-resources</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<outputStyle>expanded</outputStyle>
					<inputPath>${basedir}/WebContent/static/styles/scss</inputPath>
					<outputPath>${basedir}/target/Afroteca/static/styles</outputPath>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.dkanejs.maven.plugins</groupId>
						<artifactId>docker-compose-maven-plugin</artifactId>
						<version>2.5.1</version>
						<executions>
							<execution>
								<id>up</id>
								<phase>verify</phase>
								<goals>
									<goal>up</goal>
								</goals>
								<configuration>
									<composeFile>${project.basedir}/docker-compose.yml</composeFile>
									<detachedMode>true</detachedMode>
									<build>true</build>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<version>${dockerfile.version}</version>
						<!-- Wire up to the default build phases -->
						<executions>
							<execution>
								<id>default</id>
								<goals>
									<goal>build</goal>
									<goal>push</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<repository>${docker.image.prefix}/${project.artifactId}</repository>
							<tag>${project.version}</tag>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
